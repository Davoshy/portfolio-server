{"version":3,"sources":["logo.svg","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Main","className","src","alt","href","target","icon","faLinkedin","size","style","color","faGithub","faClipboard","faReact","faLaptopCode","faDatabase","backgroundImage","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,kC,+LCkO5BC,E,uKA/MX,OACE,oCACE,yBAAKC,UAAU,QACb,4BAAQA,UAAU,YAChB,yBAAKA,UAAU,WACb,yBACEC,IAAI,4DACJD,UAAU,OACVE,IAAI,UAEN,yBAAKF,UAAU,SAAf,cACA,yBAAKA,UAAU,QAAf,6BACA,yBAAKA,UAAU,SACb,uBACEG,KAAK,mDACLC,OAAO,UAEP,kBAAC,IAAD,CACEJ,UAAU,OACVK,KAAMC,IACNC,KAAK,KACLC,MAAO,CAAEC,MAAO,cAGpB,uBAAGN,KAAK,6BAA6BC,OAAO,UAC1C,kBAAC,IAAD,CACEJ,UAAU,OACVK,KAAMK,IACNH,KAAK,KACLC,MAAO,CAAEC,MAAO,cAGpB,kBAAC,IAAD,CACET,UAAU,OACVK,KAAMM,IACNJ,KAAK,KACLC,MAAO,CAAEC,MAAO,gBAKxB,6BAAST,UAAU,YACjB,yBAAKA,UAAU,2BACb,6BACE,kBAAC,IAAD,CAAiBK,KAAMO,IAASL,KAAK,OACrC,yCACA,yCACA,uCACA,uCAEF,6BACE,kBAAC,IAAD,CAAiBF,KAAMQ,IAAcN,KAAK,OAC1C,wCAEA,sCACA,0CAEF,6BACE,kBAAC,IAAD,CAAiBF,KAAMS,IAAYP,KAAK,OACxC,uBAAGP,UAAU,0BACb,wCAEA,sCACA,uCAKN,6BAASA,UAAU,YACjB,gDAEA,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,aACb,uBACEG,KAAK,4CACLC,OAAO,UAEP,8CAEF,uBACED,KAAK,2CACLC,OAAO,UAEP,gDAGF,uBACED,KAAK,8CACLC,OAAO,UAEP,iDAGJ,yBACEJ,UAAU,aACVQ,MAAO,CACLO,gBAAgB,mJAKpB,yBAAKf,UAAU,oBACb,4CACA,2DAIJ,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,aACb,uBAAGG,KAAK,kCAAkCC,OAAO,UAC/C,+CAEF,uBAAGD,KAAK,sCAAsCC,OAAO,UACnD,gDAGF,uBACED,KAAK,6CACLC,OAAO,UAEP,iDAGJ,yBACEJ,UAAU,aACVQ,MAAO,CACLO,gBAAgB,4HAGpB,yBAAKf,UAAU,oBACb,iDACA,2DAIJ,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,aACb,8CACA,uBAAGG,KAAK,sCAAsCC,OAAO,UACnD,gDAGF,uBACED,KAAK,6CACLC,OAAO,UAEP,iDAGJ,yBACEJ,UAAU,aACVQ,MAAO,CACLO,gBAAgB,qGAGpB,yBAAKf,UAAU,oBACb,wCACA,2DAIJ,wBAAIA,UAAU,QACZ,yBAAKA,UAAU,aACb,8CACA,uBAAGG,KAAK,sCAAsCC,OAAO,UACnD,gDAGF,uBACED,KAAK,6CACLC,OAAO,UAEP,iDAGJ,yBACEJ,UAAU,aACVQ,MAAO,CACLO,gBAAgB,mJAGpB,yBAAKf,UAAU,oBACb,yCACA,6DAKR,6BAASA,UAAU,yBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,0CAGJ,+BAGF,4BAAQA,UAAU,kBAChB,0D,GAzMOgB,IAAMC,W,YCHVC,MARf,WACE,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,QCGcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8e5c91f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faLinkedin,\n  faReact\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faClipboard } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faLaptopCode,\n  faDatabase,\n  faProjectDiagram\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Link } from \"react-router-dom\";\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"body\">\n          <header className=\"showcase\">\n            <div className=\"content\">\n              <img\n                src=\"https://imagehost.imageupload.net/2020/03/30/logo_D_D.png\"\n                className=\"logo\"\n                alt=\"Media\"\n              />\n              <div className=\"title\">David Doan</div>\n              <div className=\"text\"> MERN Stack Web Developer</div>\n              <div className=\"icons\">\n                <a\n                  href=\"https://www.linkedin.com/in/david-doan-89748a75/\"\n                  target=\"_blank\"\n                >\n                  <FontAwesomeIcon\n                    className=\"icon\"\n                    icon={faLinkedin}\n                    size=\"2x\"\n                    style={{ color: \"#3a3664\" }}\n                  />\n                </a>\n                <a href=\"https://github.com/Davoshy\" target=\"_blank\">\n                  <FontAwesomeIcon\n                    className=\"icon\"\n                    icon={faGithub}\n                    size=\"2x\"\n                    style={{ color: \"#3a3664\" }}\n                  />\n                </a>\n                <FontAwesomeIcon\n                  className=\"icon\"\n                  icon={faClipboard}\n                  size=\"2x\"\n                  style={{ color: \"#3a3664\" }}\n                />\n              </div>\n            </div>\n          </header>\n          <section className=\"services\">\n            <div className=\"container grid-3 center\">\n              <div>\n                <FontAwesomeIcon icon={faReact} size=\"3x\" />\n                <h3>Front End</h3>\n                <p>HTML / CSS</p>\n                <p>React.js</p>\n                <p>GraphQL</p>\n              </div>\n              <div>\n                <FontAwesomeIcon icon={faLaptopCode} size=\"3x\" />\n                <h3>Back End</h3>\n\n                <p>Node.js</p>\n                <p>Express.js</p>\n              </div>\n              <div>\n                <FontAwesomeIcon icon={faDatabase} size=\"3x\" />\n                <i className=\"fas fa-database fa-3x\"></i>\n                <h3>Database</h3>\n\n                <p>MongoDB</p>\n                <p>MySQL</p>\n              </div>\n            </div>\n          </section>\n\n          <section className=\"projects\">\n            <h2> Projects Build </h2>\n\n            <ul className=\"card-list\">\n              <li className=\"card\">\n                <div className=\"hovershow\">\n                  <a\n                    href=\"https://airbnbclone-client.herokuapp.com/\"\n                    target=\"_blank\"\n                  >\n                    <button>Show App!</button>\n                  </a>\n                  <a\n                    href=\"https://github.com/Davoshy/04-airbnb-api\"\n                    target=\"_blank\"\n                  >\n                    <button>Server Code</button>\n                  </a>\n\n                  <a\n                    href=\"https://github.com/Davoshy/04-airbnb-client\"\n                    target=\"_blank\"\n                  >\n                    <button>Client Code</button>\n                  </a>\n                </div>\n                <div\n                  className=\"card-image\"\n                  style={{\n                    backgroundImage: `url(\n                            \"https://i.pinimg.com/originals/56/78/7f/56787f4caf0c7764457a10844c45013c.jpg\"\n                          )`\n                  }}\n                ></div>\n                <div className=\"card-description\">\n                  <h2>AirBnb Clone</h2>\n                  <p>React.js, Node.js, MongoDB</p>\n                </div>\n              </li>\n\n              <li className=\"card\">\n                <div className=\"hovershow\">\n                  <a href=\"https://balieats.herokuapp.com/\" target=\"_blank\">\n                    <button> Show App!</button>\n                  </a>\n                  <a href=\"https://github.com/Davoshy/balideli\" target=\"_blank\">\n                    <button>Server Code</button>\n                  </a>\n\n                  <a\n                    href=\"https://github.com/Davoshy/balideli-client\"\n                    target=\"_blank\"\n                  >\n                    <button>Client Code</button>\n                  </a>\n                </div>\n                <div\n                  className=\"card-image\"\n                  style={{\n                    backgroundImage: `url(\"https://previews.123rf.com/images/miracel123/miracel1231801/miracel123180100095/94124044-food-delivery-logo.jpg\")`\n                  }}\n                ></div>\n                <div className=\"card-description\">\n                  <h2>Bali Delivery App</h2>\n                  <p>React.js, Node.js, MongoDB</p>\n                </div>\n              </li>\n\n              <li className=\"card\">\n                <div className=\"hovershow\">\n                  <button> Show App!</button>\n                  <a href=\"https://github.com/Davoshy/balideli\" target=\"_blank\">\n                    <button>Server Code</button>\n                  </a>\n\n                  <a\n                    href=\"https://github.com/Davoshy/balideli-client\"\n                    target=\"_blank\"\n                  >\n                    <button>Client Code</button>\n                  </a>\n                </div>\n                <div\n                  className=\"card-image\"\n                  style={{\n                    backgroundImage: `url(\"https://www.smartsuppcdn.com/assets/img/illustration/png/smartsupp-chat-dashboard-sm.png\")`\n                  }}\n                ></div>\n                <div className=\"card-description\">\n                  <h2>Chat App</h2>\n                  <p>React.js, Node.js, MongoDB</p>\n                </div>\n              </li>\n\n              <li className=\"card\">\n                <div className=\"hovershow\">\n                  <button> Show App!</button>\n                  <a href=\"https://github.com/Davoshy/balideli\" target=\"_blank\">\n                    <button>Server Code</button>\n                  </a>\n\n                  <a\n                    href=\"https://github.com/Davoshy/balideli-client\"\n                    target=\"_blank\"\n                  >\n                    <button>Client Code</button>\n                  </a>\n                </div>\n                <div\n                  className=\"card-image\"\n                  style={{\n                    backgroundImage: `url(\"https://support.apple.com/library/content/dam/edam/applecare/images/en_US/applemusic/ios13-iphone-xs-ipad-pro-music-playlists-hero.jpg\")`\n                  }}\n                ></div>\n                <div className=\"card-description\">\n                  <h2>Music App</h2>\n                  <p>React.js, Node.js, MongoDB</p>\n                </div>\n              </li>\n            </ul>\n          </section>\n          <section className=\"about bg-light grid-2\">\n            <div className=\"container\">\n              <div className=\"center\">\n                <h2>About Me</h2>\n              </div>\n            </div>\n            <div></div>\n          </section>\n\n          <footer className=\"center bg-dark\">\n            <p>David Doan &copy; 2020</p>\n          </footer>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport Main from \"./components/Main\";\nimport \"./styles/main.css\";\nimport \"./styles/card.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}